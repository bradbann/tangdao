<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.tangdao.modules.gen.mapper.GenDataDictMapper">
    
	<select id="findTableList" resultType="GenTable">
		<if test="global.jdbcType == 'mysql' or global.jdbcType == 'mariadb'">
			SELECT 
				t.table_name AS "tableName", 
				t.TABLE_COMMENT AS "comments"
			FROM information_schema.`TABLES` t
			WHERE t.TABLE_SCHEMA = (select database())
			<if test="tableName != null and tableName != ''">
				AND t.TABLE_NAME = #{tableName}
			</if>
			UNION ALL
			SELECT 
				t.table_name AS "tableName",
				t.VIEW_DEFINITION AS "comments"
			FROM information_schema.`VIEWS` t
			WHERE t.TABLE_SCHEMA = (select database())
			<if test="tableName != null and tableName != ''">
				AND t.TABLE_NAME = #{tableName}
			</if>
			ORDER BY "tableName"
		</if>
		<if test="global.jdbcType == 'oracle'">
			SELECT 
				t.TABLE_NAME AS "tableName",
				c.COMMENTS AS "comments"
			FROM user_tables t, user_tab_comments c
			WHERE t.table_name = c.table_name
			<if test="tableName != null and tableName != ''">
				AND t.table_name = upper(#{tableName})
			</if>
			UNION ALL
			SELECT 
				t.VIEW_NAME AS "tableName",
				c.COMMENTS AS "comments"
			FROM user_views t, user_tab_comments c
			WHERE t.view_name = c.table_name
			<if test="tableName != null and tableName != ''">
				AND t.view_name = upper(#{tableName})
			</if>
			ORDER BY "tableName"
		</if>
		<if test="global.jdbcType == 'mssql'">
			SELECT
				t.name AS "tableName",
				p.value AS "comments"
			FROM sysobjects t
			LEFT JOIN sys.extended_properties p ON p.major_id = t.id
				AND p.minor_id = 0 AND p.name = 'MS_Description'
			WHERE t.xtype = 'U'
			<if test="tableName != null and tableName != ''">
				AND t.name = #{tableName}
			</if>
			ORDER BY t.name
		</if>
		<if test="global.jdbcType == 'postgresql' or global.jdbcType == 'highgo'">
			SELECT
				c.relname AS "tableName",
				d.description AS "comments"
			FROM pg_class c
			JOIN pg_namespace n ON c.relnamespace = n.oid
			LEFT JOIN pg_description d ON d.objoid = c.relfilenode AND d.objsubid = 0
			WHERE c.relkind = 'r'
				AND n.nspname = (select current_schema())
			<if test="tableName != null and tableName != ''">
				AND c.relname = #{tableName}
			</if>
			ORDER BY n.nspname, c.relname
		</if>
		<if test="global.jdbcType == 'db2'">
			SELECT 
				t.tabname AS "tableName",
				t.remarks AS "comments"
			FROM syscat.tables t
			WHERE t.tabschema = (SELECT current schema FROM dual)
			<if test="tableName != null and tableName != ''">
				AND t.tabname = upper(#{tableName})
			</if>
			ORDER BY t.tabname
		</if>
	</select>
	
	<select id="findTableColumnList" resultType="GenTableColumn">
		<if test="global.jdbcType == 'mysql' or global.jdbcType == 'mariadb'">
			SELECT 
				t.COLUMN_NAME AS "columnName",
				t.COLUMN_COMMENT AS "comments",
				(CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull",
				(t.ORDINAL_POSITION * 10) AS "columnSort",
				t.COLUMN_TYPE AS "jdbcType"
			FROM information_schema.`COLUMNS` t
			WHERE t.TABLE_SCHEMA = (select database())
			<if test="tableName != null and tableName != ''">
				AND t.TABLE_NAME = #{tableName}
			</if>
			ORDER BY t.ORDINAL_POSITION
		</if>
		<if test="global.jdbcType == 'oracle'">
			SELECT
				t.COLUMN_NAME AS "columnName",
				c.COMMENTS AS "comments",
				<!-- t.DATA_TYPE, t.DATA_LENGTH, t.DATA_PRECISION, t.DATA_SCALE, -->
				(CASE WHEN t.NULLABLE = 'Y' THEN '1' ELSE '0' END) AS "isNull",
				(t.COLUMN_ID * 10) AS "columnSort",
				decode(t.DATA_TYPE,
					'DATE',t.DATA_TYPE || '(' || t.DATA_LENGTH || ')',
					'VARCHAR2', t.DATA_TYPE || '(' || t.DATA_LENGTH || ')',
					'VARCHAR', t.DATA_TYPE || '(' || t.DATA_LENGTH || ')',
					'NVARCHAR2', t.DATA_TYPE || '(' || t.DATA_LENGTH/2 || ')',
					'CHAR', t.DATA_TYPE || '(' || t.DATA_LENGTH || ')',
					'NUMBER',t.DATA_TYPE || (
						nvl2(t.DATA_PRECISION,
							nvl2(decode(t.DATA_SCALE, 0, null, t.DATA_SCALE),
									'(' || t.DATA_PRECISION || ',' || t.DATA_SCALE || ')', 
									'(' || t.DATA_PRECISION || ')'
								),'(18)'
							)
						),t.DATA_TYPE) AS "jdbcType"
			FROM user_tab_columns t, user_col_comments c
			WHERE t.TABLE_NAME = c.table_name AND t.COLUMN_NAME = c.column_name
			<if test="tableName != null and tableName != ''">
				AND t.TABLE_NAME = upper(#{tableName})
			</if>
			ORDER BY t.COLUMN_ID
		</if>
		<if test="global.jdbcType == 'mssql'">
			SELECT
				c.name AS "columnName",
				p.value AS "comments",
				(case when c.isnullable = 1 then '1' else '0' end) AS "isNull",
				(c.colid * 10) AS "columnSort",
				(case when ct.name = 'datetime' or ct.name = 'datetime2' then ct.name
					 when c.scale is null or c.scale = 0 then (ct.name + '(' + convert(varchar, c.prec) + ')')
					 when c.scale > 0 then (ct.name + '(' + convert(varchar, c.prec) + ',' + convert(varchar, c.scale) + ')')
					 else ct.name end) AS "jdbcType"
			FROM sysobjects t
			JOIN syscolumns c on c.id = t.id
			JOIN systypes ct on ct.xusertype = c.xusertype 
			LEFT JOIN sys.extended_properties p ON p.major_id = t.id AND p.minor_id = c.colid AND p.name = 'MS_Description'
			WHERE t.xtype = 'U'
			<if test="tableName != null and tableName != ''">
				AND t.name = #{tableName}
			</if>
		</if>
		<if test="global.jdbcType == 'postgresql' or global.jdbcType == 'highgo'">
			SELECT
				a.attname  AS "columnName",
				(CASE WHEN a.attnotnull = 't' THEN '1' ELSE '0' END) AS "isNull",
				(a.attnum * 10) AS "columnSort",
				format_type(a.atttypid, a.atttypmod) AS "jdbcType",
				d.description AS "comments"
			FROM pg_class c
			JOIN pg_namespace n ON c.relnamespace = n.oid
			JOIN pg_attribute a ON a.attrelid = c.oid AND a.attnum > 0 AND a.atttypid > 0
			LEFT JOIN pg_description d ON d.objoid = a.attrelid AND d.objsubid = a.attnum
			WHERE n.nspname = (select current_schema())
				<if test="tableName != null and tableName != ''">
					AND c.relname = #{tableName}
				</if>
			ORDER BY a.attnum
		</if>
		<if test="global.jdbcType == 'db2'">
			SELECT 
				t.colname AS "columnName",
				case when nulls = 'N' then '0' else '1' end AS "isNull",
				t.colno AS "columnSort",
				t.typename AS "columnType",
				case when scale = 0
					then t.typename concat '(' concat trim(char(length)) concat ')'
					else t.typename concat '(' concat trim(char(length)) concat ',' concat trim(char(scale)) concat ')'
					end as "jdbcType",
				t.remarks AS "comments"
			FROM syscat.columns t
			WHERE t.tabschema = (SELECT current schema FROM dual)
			<if test="tableName != null and tableName != ''">
				AND t.tabname = upper(#{tableName})
			</if>
			ORDER BY t.colno
		</if>
	</select>
	
	<select id="findTablePK" resultType="GenTableColumn">
		<if test="global.jdbcType == 'mysql' or global.jdbcType == 'mariadb'">
			SELECT 
				au.COLUMN_NAME AS "columnName"
			FROM information_schema.`COLUMNS` au
			WHERE au.TABLE_SCHEMA = (select database())
				AND au.COLUMN_KEY='PRI'
				AND au.TABLE_NAME = #{tableName}
		</if>
		<if test="global.jdbcType == 'oracle'">
			SELECT
				lower(cu.COLUMN_NAME) AS "columnName"
			FROM user_cons_columns cu, user_constraints au
			WHERE cu.constraint_name = au.constraint_name
				AND au.constraint_type = 'P'
				AND au.table_name = upper(#{tableName})
		</if>
		<if test="global.jdbcType == 'mssql'">
			SELECT
				c.name AS "columnName"
			FROM sysobjects t
			JOIN syscolumns c on c.id = t.id
			WHERE t.xtype = 'U'
				AND c.colid IN (SELECT keyno FROM sysindexkeys WHERE id=t.id)
				AND t.name = #{tableName}
		</if>
		<if test="global.jdbcType == 'postgresql' or global.jdbcType == 'highgo'">
			SELECT
				pg_attribute.attname AS "columnName"
			FROM pg_constraint
			JOIN pg_class ON pg_constraint.conrelid = pg_class.oid
			JOIN pg_attribute on pg_attribute.attrelid = pg_class.oid
				AND pg_attribute.attnum = pg_constraint.conkey[1]
			JOIN pg_type on pg_type.oid = pg_attribute.atttypid
			WHERE pg_class.relname = #{tableName}
				AND pg_constraint.contype = 'p'
		</if>
		<if test="global.jdbcType == 'db2'">
			SELECT b.colname AS "columnName"
			FROM syscat.tabconst a, syscat.keycoluse b 
			WHERE a.constname = b.constname AND a.type='P'
				AND a.tabschema = (SELECT current schema FROM dual)
			<if test="tableName != null and tableName != ''">
				AND a.tabname = upper(#{tableName})
			</if>
		</if>
	</select>
	
</mapper>